parameters:
  buildConfiguration: 'Release'
  projectPath: ''
  publishPath: ''
  webAppName: 'app'

jobs:

- job: ${{ parameters.webAppName }}

  pool:
    vmImage: 'Ubuntu-16.04'

  steps:

  - task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
    displayName: 'Prepare analysis on SonarCloud'
    inputs:
      SonarCloud: 'sonarcloud-escalonn'
      organization: 'escalonn-github'
      projectKey: 'temprecords-service'

  - task: DotNetCoreCLI@2
    inputs:
      command: build
      projects: ${{ parameters.projectPath }}
      configuration: ${{ parameters.buildConfiguration }}
    displayName: dotnet build

  - task: DotNetCoreCLI@2
    inputs:
      command: test
      projects: ${{ parameters.projectPath }}
      configuration: ${{ parameters.buildConfiguration }}
      publishTestResults: true
    displayName: dotnet test

  - task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
    displayName: 'Run Code Analysis'

  - task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
    displayName: 'Publish Quality Gate Result'

  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      projects: ${{ parameters.publishPath }}
      configuration: ${{ parameters.buildConfiguration }}
      publishWebProjects: false
      arguments: '--output $(System.DefaultWorkingDirectory)/publish'
      zipAfterPublish: true
    displayName: dotnet publish

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: ${{ parameters.webAppName }}
      pathtoPublish: '$(System.DefaultWorkingDirectory)/publish'

  - task: AzureRmWebAppDeployment@4
    inputs:
      azureSubscription: azure-outlook
      webAppName: ${{ parameters.webAppName }}
      takeAppOfflineFlag: true
      package: 'publish/*.zip'
